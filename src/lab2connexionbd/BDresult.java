/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab2connexionbd;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author admin
 */
public class BDresult extends javax.swing.JFrame {

    /**
     * Creates new form BDresult
     */
    Connection _connection;
    Integer _index;
    
    public BDresult() {
        initComponents(); 
        
        _connection = null;
        _index = 0;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAjouter = new javax.swing.JButton();
        btnModifier = new javax.swing.JButton();
        btnDetruire = new javax.swing.JButton();
        cbPrepare = new javax.swing.JCheckBox();
        btnConnexion = new javax.swing.JButton();
        btnDeconnexion = new javax.swing.JButton();
        lbInfoRow = new javax.swing.JLabel();
        lbCurrentRow = new javax.swing.JLabel();
        lbFirst = new javax.swing.JLabel();
        lbPrevious = new javax.swing.JLabel();
        lbNext = new javax.swing.JLabel();
        lbLast = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        btnModifier.setText("Modifier");
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnDetruire.setText("DÃ©truire");
        btnDetruire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetruireActionPerformed(evt);
            }
        });

        cbPrepare.setText("Prepare Statement");
        cbPrepare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPrepareActionPerformed(evt);
            }
        });

        btnConnexion.setText("Connexion");
        btnConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnexionActionPerformed(evt);
            }
        });

        btnDeconnexion.setText("Deconnexion");
        btnDeconnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeconnexionActionPerformed(evt);
            }
        });

        lbInfoRow.setText("Ligne courante:");

        lbCurrentRow.setText("aucune ligne selectionee");

        lbFirst.setText("<<");
        lbFirst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFirstMouseClicked(evt);
            }
        });

        lbPrevious.setText("<");
        lbPrevious.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbPreviousMouseClicked(evt);
            }
        });

        lbNext.setText(">");
        lbNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbNextMouseClicked(evt);
            }
        });

        lbLast.setText(">>");
        lbLast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbLastMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDetruire)
                            .addComponent(cbPrepare)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnAjouter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnModifier, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnDeconnexion)
                            .addComponent(btnConnexion)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(lbFirst))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(lbInfoRow)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbCurrentRow)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPrevious)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbNext, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(lbLast)))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnConnexion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeconnexion)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbInfoRow)
                    .addComponent(lbCurrentRow))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFirst)
                    .addComponent(lbLast)
                    .addComponent(lbNext)
                    .addComponent(lbPrevious))
                .addGap(27, 27, 27)
                .addComponent(btnAjouter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModifier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDetruire)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbPrepare)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Database structure: 
    // idPourse (pk) number(5)
    // idNomPourse varchar2(60)
    // idDateNaissancePourse date
    // idAgePourse number(5)
    // idPrixPourse number(5,2)
    
    // <editor-fold defaultstate="collapsed" desc="Events">
    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAjouterActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnModifierActionPerformed

    private void btnDetruireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetruireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDetruireActionPerformed

    private void cbPrepareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPrepareActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPrepareActionPerformed

    private void btnConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnexionActionPerformed
        // TODO add your handling code here:
        try {  
            // Load the JDBC driver      
            Class.forName("com.mysql.jdbc.Driver").newInstance(); 

            // Create a connection to the database      
            String serverName = "localhost";      
            String mydatabase = "lab2";      
            String url = "jdbc:mysql://" + serverName + "/" + mydatabase; // a JDBC url      
            String username = "root";      
            String password = "";     
            _connection = DriverManager.getConnection(url, username, password);      
        } catch (ClassNotFoundException e) {  
            // Could not find the database driver      
        } 
        catch (SQLException e) {  
            // Could not connect to the database  
        } catch (InstantiationException ex) {
            Logger.getLogger(BDresult.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(BDresult.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConnexionActionPerformed

    private void btnDeconnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeconnexionActionPerformed
        try {
            // TODO add your handling code here:
            _connection.close();
        } catch (SQLException ex) {
            Logger.getLogger(BDresult.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeconnexionActionPerformed

    private void lbFirstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFirstMouseClicked
        // TODO add your handling code here:
        // How the fuck optional parameters work in java?
        _index = 0;
        
        String[] params = {"nothing"};
        selectQuery("Select * FROM Pourse LIMIT 1", params);
    }//GEN-LAST:event_lbFirstMouseClicked

    private void lbPreviousMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbPreviousMouseClicked
        // TODO add your handling code here:
        _index -= 1;
        
        String[] params = {"nothing"};
        selectQuery("Select * FROM Pourse LIMIT 1", params);
    }//GEN-LAST:event_lbPreviousMouseClicked

    private void lbNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbNextMouseClicked
        // TODO add your handling code here:
        _index += 1;
        
        String[] params = {"nothing"};
        selectQuery("Select * FROM Pourse LIMIT 1", params);
    }//GEN-LAST:event_lbNextMouseClicked

    private void lbLastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLastMouseClicked
        // TODO add your handling code here:
        PreparedStatement pst;
        ResultSet rs;
        try {
            pst = _connection.prepareCall("SELECT count(*) FROM Pourse");
            rs = pst.executeQuery();
            _index = rs.getInt(1);
        } catch (SQLException ex) {
            Logger.getLogger(BDresult.class.getName()).log(Level.SEVERE, null, ex);
        }          
          
        String[] params = {"nothing"};
        selectQuery("Select * FROM Pourse ORDER BY idPourse DESC LIMIT 1", params);
    }//GEN-LAST:event_lbLastMouseClicked
    // </editor-fold>
    
    // <editor-fold defaultstate="collapsed" desc="Methods">
    private void selectQuery(String pQuery, String[] params) {
        PreparedStatement pst = null;
        ResultSet rs = null;
        
        try {
            pst = _connection.prepareStatement(pQuery, 1005, 1008);
            pst.clearParameters();
            for(int i = 0; i < params.length; i++)
                pst.setString(i + 1, params[i]);
            rs = pst.executeQuery();
            
            lbCurrentRow.setText(rs.toString());           
        } catch (SQLException ex) {
            Logger.getLogger(BDresult.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    // </editor-fold>
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BDresult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BDresult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BDresult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BDresult.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BDresult().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnConnexion;
    private javax.swing.JButton btnDeconnexion;
    private javax.swing.JButton btnDetruire;
    private javax.swing.JButton btnModifier;
    private javax.swing.JCheckBox cbPrepare;
    private javax.swing.JLabel lbCurrentRow;
    private javax.swing.JLabel lbFirst;
    private javax.swing.JLabel lbInfoRow;
    private javax.swing.JLabel lbLast;
    private javax.swing.JLabel lbNext;
    private javax.swing.JLabel lbPrevious;
    // End of variables declaration//GEN-END:variables
}
